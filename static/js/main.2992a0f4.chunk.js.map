{"version":3,"sources":["reducers.js","components/MediaCard.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Header.js","components/CounterButton.js","components/Scroll.js","components/Loading.js","containers/App.js","actions.js","constants.js","theme.js","serviceWorker.js","index.js"],"names":["initialState","searchField","requestState","isPending","robots","error","useStyles","makeStyles","root","height","maxWidth","backgroundColor","lightBlue","media","MediaCard","props","id","name","email","classes","Card","key","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardList","cardList","arr","map","item","i","Grid","container","justify","spacing","theme","margin","padding","display","alignItems","width","input","marginLeft","flex","iconButton","SearchBox","searchChange","Paper","InputBase","placeholder","inputProps","onChange","ErrorBoundry","state","hasError","this","setState","children","React","Component","Header","console","log","CounterButton","updateCount","count","nextProps","nextState","Button","onClick","Scroll","style","overflowY","border","Loading","textAlign","App","onRequestRobots","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","Box","align","connect","searchRobots","requestRobots","dispatch","event","type","payload","target","value","fetch","then","response","json","data","catch","err","createMuiTheme","overrides","MuiCssBaseline","body","background","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2992a0f4.chunk.js","sourcesContent":["import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\nconst initialState = {\r\n    searchField: '',\r\n};\r\n\r\nexport const searchRobots = (state = initialState, action = {}) => {\r\n    // console.log(action.type);\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            // return updated state\r\n            return { ...state, searchField: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst requestState = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: '',\r\n};\r\n\r\nexport const requestRobots = (state = requestState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return { ...state, isPending: true };\r\n\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return { ...state, robots: action.payload, isPending: false };\r\n\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return { ...state, error: action.payload, isPending: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n// import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { lightBlue } from '@material-ui/core/colors';\r\n// import Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 320,\r\n        maxWidth: 200,\r\n        backgroundColor: lightBlue[300],\r\n    },\r\n    media: {\r\n        height: 200,\r\n    },\r\n});\r\n\r\nfunction MediaCard(props) {\r\n    const { id, name, email } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card key={id} className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={`https://robohash.org/${id}.png?size=200x200`}\r\n                    title=\"Robot\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {name}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                    >\r\n                        {email}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MediaCard;\r\n","import React from 'react';\r\nimport MediaCard from './MediaCard';\r\n\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n// }));\r\n\r\nfunction CardList(props) {\r\n    const { arr } = props;\r\n    // const classes = useStyles();\r\n\r\n    const cardList = arr.map((item, i) => {\r\n        return (\r\n            <Grid key={i} item>\r\n                <MediaCard id={item.id} email={item.email} name={item.name} />\r\n            </Grid>\r\n        );\r\n    });\r\n\r\n    // console.log('CardList');\r\n\r\n    return (\r\n        <div>\r\n            <Grid container justify=\"center\" spacing={1}>\r\n                {cardList}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { lightBlue } from '@material-ui/core/colors';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         '& > *': {\r\n//             margin: theme.spacing(1),\r\n//             width: '40ch',\r\n//             // color: lightBlue[100],\r\n//         },\r\n//     },\r\n// }));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: '8px',\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '40ch',\r\n        height: 50,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n}));\r\n\r\nfunction SearchBox(props) {\r\n    const { searchChange } = props;\r\n    const classes = useStyles();\r\n    // console.log('SearchBox');\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Search robots\"\r\n                inputProps={{ 'aria-label': 'search robots' }}\r\n                onChange={searchChange}\r\n            />\r\n        </Paper>\r\n\r\n        // <form className={classes.root} noValidate>\r\n        //     <TextField\r\n        //         id=\"filled-basic\"\r\n        //         label=\"Search\"\r\n        //         aria-label=\"Search Robots\"\r\n        //         variant=\"outlined\"\r\n\r\n        //         onChange={searchChange}\r\n        //     />\r\n        // </form>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h6>Something went wrong</h6>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\n\nclass Header extends React.Component {\n    render() {\n        console.log('Header');\n\n        return <h1>ROBOFRIENDS</h1>;\n    }\n    /* <Typography variant=\"h2\">ROBOFRIENDS</Typography> */\n}\n\nexport default Header;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nclass CounterButton extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            count: 0,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.count !== nextState.count) return true;\n        return false;\n    }\n\n    updateCount = () => {\n        this.setState((state) => {\n            return { count: state.count + 1 };\n        });\n    };\n\n    render() {\n        return (\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.updateCount}\n            >\n                Count: {this.state.count}\n            </Button>\n        );\n    }\n    /* <Typography variant=\"h2\">ROBOFRIENDS</Typography> */\n}\n\nexport default CounterButton;\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                overflowY: 'scroll',\r\n                height: '70vh',\r\n                // position: 'sticky',\r\n                // top: '0',\r\n                // zIndex: '5',\r\n                // padding: '10px',\r\n                border: '2px solid black',\r\n                // background:\r\n                //     'linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%)',\r\n            }}\r\n            // style={{\r\n            //     overflow: 'scroll',\r\n            //     border: '5px solid black',\r\n            //     height: '800px',\r\n            // }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;\r\n","import React from 'react';\n// import Typography from '@material-ui/core/Typography';\n// import { makeStyles } from '@material-ui/core/styles';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: 'flex',\n//         '& > * + *': {\n//             marginLeft: theme.spacing(2),\n//         },\n//     },\n// }));\n\nfunction Loading() {\n    // const classes = useStyles();\n    return (\n        // <div className={classes.root} /*style={{ justifyContent: 'center' }}*/>\n        //     <CircularProgress />\n        // </div>\n        <div style={{ textAlign: 'center' }}>\n            <h2>Loading...</h2>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import Container from '@material-ui/core/Container';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport './App.css';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Header from '../components/Header';\r\nimport CounterButton from '../components/CounterButton';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport Scroll from '../components/Scroll';\r\nimport Loading from '../components/Loading';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import CardList from './CardList';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n\r\n//     // paper: {\r\n//     //     padding: theme.spacing(2),\r\n//     //     textAlign: 'center',\r\n//     //     color: theme.palette.text.secondary,\r\n//     // },\r\n// }));\r\n\r\n// send state as props to components\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error,\r\n    };\r\n};\r\n\r\n// state changed trigger action\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: (event) => dispatch(requestRobots()),\r\n    };\r\n};\r\n\r\nclass App extends React.Component {\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //         robots: [],\r\n    //     };\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.onRequestRobots();\r\n    }\r\n\r\n    render() {\r\n        // const { robots } = this.state;\r\n        const { searchField, onSearchChange, robots, isPending } = this.props;\r\n\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n\r\n        // if (isPending) {\r\n        //     return <Typography variant=\"h6\">Loading..</Typography>;\r\n        // }\r\n\r\n        return (\r\n            // <Container maxWidth=\"xl\">\r\n            <div>\r\n                <Box align=\"center\" margin={3}>\r\n                    <Header />\r\n                    <CounterButton />\r\n                    <SearchBox searchChange={onSearchChange} />\r\n                </Box>\r\n\r\n                <Scroll>\r\n                    {isPending ? (\r\n                        <Loading />\r\n                    ) : (\r\n                        <ErrorBoundry>\r\n                            <CardList arr={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    )}\r\n                </Scroll>\r\n            </div>\r\n            // </Container>\r\n        );\r\n    }\r\n}\r\n\r\n// connect redux store to the App component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\nexport const setSearchField = (text) => {\r\n    // console.log(text);\r\n    return {\r\n        type: CHANGE_SEARCH_FIELD,\r\n        payload: text,\r\n    };\r\n};\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then((response) => response.json())\r\n        .then((data) =>\r\n            dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data })\r\n        )\r\n        .catch((err) =>\r\n            dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err })\r\n        );\r\n};\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","// import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n// import { green } from '@material-ui/core/colors';\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n    // palette: {\r\n    //     primary: {\r\n    //         light: purple[300],\r\n    //         main: purple[500],\r\n    //         dark: purple[700],\r\n    //     },\r\n    //     secondary: {\r\n    //         light: green[300],\r\n    //         main: green[500],\r\n    //         dark: green[700],\r\n    //     },\r\n    // },\r\n    // typography: {\r\n    //     useNextVariants: true,\r\n    // },\r\n    overrides: {\r\n        MuiCssBaseline: {\r\n            '@global': {\r\n                body: {\r\n                    background:\r\n                        'linear-gradient(to left, rgba(7,27,82,1) 0%, rgba(0,128,128,1) 100%)',\r\n                },\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n\r\n/*\r\nfunction withRoot(Component) {\r\n  function WithRoot(props) {\r\n    // MuiThemeProvider makes the theme available down the React tree\r\n    // thanks to React context.\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  return WithRoot;\r\n}\r\n\r\nexport default withRoot;\r\n*/\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import './wdyr';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport reduxThunk from 'redux-thunk';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { searchRobots, requestRobots } from './reducers';\r\nimport App from './containers/App';\r\nimport theme from './theme';\r\nimport * as serviceWorker from './serviceWorker';\r\n// eslint-disable-next-line\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\r\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk /*logger*/));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}